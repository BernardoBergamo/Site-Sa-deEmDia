{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/andre/source/repos/Unisinos.SaudeEmDia/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { User } from '../models/user.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nclass JitsiService {\n  constructor(route) {\n    var _this = this;\n    this.route = route;\n    this.domain = 'meet.jit.si';\n    // For Custom Controls\n    this.isAudioMuted = true;\n    this.isVideoMuted = true;\n    this.handleClose = () => {\n      console.log('handleClose');\n    };\n    this.endpointTextMessageReceived = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (event) {\n        console.log('mensaje recibido');\n        console.log(event);\n        console.log(event.data.eventData.text);\n        if (event.data.eventData.text = 'mover a principal') {\n          _this.moveRoom('grupo 1', true);\n        }\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    this.passwordRequired = /*#__PURE__*/_asyncToGenerator(function* () {\n      console.log('passwordRequired'); // { id: \"2baa184e\" }\n      _this.api.executeCommand('password', 'The Password');\n    });\n    this.handleParticipantLeft = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(function* (participant) {\n        console.log('handleParticipantLeft', participant); // { id: \"2baa184e\" }\n        const data = yield _this.getParticipants();\n      });\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    this.participantRoleChanged = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator(function* (participant) {\n        console.log('participantRoleChanged', participant);\n        //if (participant.role === \"moderator\")\n        {\n          console.log('participantRoleChanged:', participant.role);\n          _this.api.executeCommand('password', 'The Password');\n        }\n      });\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    this.handleParticipantJoined = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator(function* (participant) {\n        console.log('OJOJOJOJ  handleParticipantJoined', participant); // { id: \"2baa184e\", displayName: \"Shanu Verma\", formattedDisplayName: \"Shanu Verma\" }\n        const data = yield _this.getParticipants();\n      });\n      return function (_x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n    this.handleVideoConferenceJoined = /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator(function* (participant) {\n        console.log('handleVideoConferenceJoined', participant); // { roomName: \"bwb-bfqi-vmh\", id: \"8c35a951\", displayName: \"Akash Verma\", formattedDisplayName: \"Akash Verma (me)\"}\n        /*\n        displayName: \"userNameTest\"\n        formattedDisplayName: \"userNameTest (me)\"\n        id: \"19563d97\"\n        roomName: \"PrincipalRoom\"\n        */\n        _this.user.setName(participant.userNameTest);\n        _this.namePrincipalRoom = participant.roomName;\n        const data = yield _this.getParticipants();\n      });\n      return function (_x5) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n    this.handleVideoConferenceLeft = () => {\n      console.log('handleVideoConferenceLeft');\n      this.route.navigate(['/thank-you']);\n    };\n    this.handleMuteStatus = audio => {\n      console.log('handleMuteStatus', audio); // { muted: true }\n    };\n\n    this.handleVideoStatus = video => {\n      console.log('handleVideoStatus', video); // { muted: true }\n    };\n\n    this.user = new User();\n    this.namePrincipalRoom = 'PrincipalRoom';\n  }\n  moveRoom(nameRoom, isAdmin) {\n    const myNode = document.getElementById('jitsi-iframe');\n    myNode.innerHTML = '';\n    console.log('nameRoom' + nameRoom);\n    console.log('prejoinPageEnabled:' + (this.user.name != '' ? true : false));\n    this.options = {\n      roomName: nameRoom,\n      width: 900,\n      height: 500,\n      configOverwrite: {\n        prejoinPageEnabled: this.user.name != '' ? false : true\n      },\n      interfaceConfigOverwrite: {\n        startAudioMuted: true,\n        startVideoMuted: true\n      },\n      parentNode: document.querySelector('#jitsi-iframe'),\n      userInfo: {\n        displayName: this.user.name,\n        email: 'john.doe@company.com'\n      }\n    };\n    this.api = new JitsiMeetExternalAPI(this.domain, this.options);\n    this.api.addEventListeners({\n      readyToClose: this.handleClose,\n      participantLeft: this.handleParticipantLeft,\n      participantJoined: this.handleParticipantJoined,\n      videoConferenceJoined: this.handleVideoConferenceJoined,\n      videoConferenceLeft: this.handleVideoConferenceLeft,\n      audioMuteStatusChanged: this.handleMuteStatus,\n      videoMuteStatusChanged: this.handleVideoStatus,\n      participantRoleChanged: this.participantRoleChanged,\n      passwordRequired: this.passwordRequired,\n      endpointTextMessageReceived: this.endpointTextMessageReceived\n    });\n  }\n  changeRouterLink(value) {\n    console.log(value);\n    this.namePrincipalRoom = value;\n    const myNode = document.getElementById('jitsi-iframe');\n    myNode.innerHTML = '';\n    this.options = {\n      roomName: this.namePrincipalRoom,\n      width: 900,\n      height: 500,\n      configOverwrite: {\n        prejoinPageEnabled: false,\n        openBridgeChannel: 'datachannel'\n      },\n      interfaceConfigOverwrite: {\n        // overwrite interface properties\n      },\n      parentNode: document.querySelector('#jitsi-iframe'),\n      userInfo: {\n        displayName: this.user.name\n      }\n    };\n    this.api = new JitsiMeetExternalAPI(this.domain, this.options);\n  }\n  getParticipants() {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve(this.api.getParticipantsInfo()); // get all participants\n      }, 500);\n    });\n  }\n  // custom events\n  executeCommand(command) {\n    this.api.executeCommand(command);\n    if (command == 'hangup') {\n      this.route.navigate(['/thank-you']);\n      return;\n    }\n    if (command == 'toggleAudio') {\n      this.isAudioMuted = !this.isAudioMuted;\n    }\n    if (command == 'toggleVideo') {\n      this.isVideoMuted = !this.isVideoMuted;\n    }\n  }\n}\nJitsiService.ɵfac = function JitsiService_Factory(t) {\n  return new (t || JitsiService)(i0.ɵɵinject(i1.Router));\n};\nJitsiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: JitsiService,\n  factory: JitsiService.ɵfac,\n  providedIn: 'root'\n});\nexport { JitsiService };","map":{"version":3,"names":["User","JitsiService","constructor","route","_this","domain","isAudioMuted","isVideoMuted","handleClose","console","log","endpointTextMessageReceived","_ref","_asyncToGenerator","event","data","eventData","text","moveRoom","_x","apply","arguments","passwordRequired","api","executeCommand","handleParticipantLeft","_ref3","participant","getParticipants","_x2","participantRoleChanged","_ref4","role","_x3","handleParticipantJoined","_ref5","_x4","handleVideoConferenceJoined","_ref6","user","setName","userNameTest","namePrincipalRoom","roomName","_x5","handleVideoConferenceLeft","navigate","handleMuteStatus","audio","handleVideoStatus","video","nameRoom","isAdmin","myNode","document","getElementById","innerHTML","name","options","width","height","configOverwrite","prejoinPageEnabled","interfaceConfigOverwrite","startAudioMuted","startVideoMuted","parentNode","querySelector","userInfo","displayName","email","JitsiMeetExternalAPI","addEventListeners","readyToClose","participantLeft","participantJoined","videoConferenceJoined","videoConferenceLeft","audioMuteStatusChanged","videoMuteStatusChanged","changeRouterLink","value","openBridgeChannel","Promise","resolve","reject","setTimeout","getParticipantsInfo","command","i0","ɵɵinject","i1","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\andre\\source\\repos\\Unisinos.SaudeEmDia\\src\\app\\services\\jitsi.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from '../models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JitsiService {\n  api: any;\n  user: User;\n  namePrincipalRoom: String;\n  options: any;\n  domain: string = 'meet.jit.si';\n\n  // For Custom Controls\n  isAudioMuted = true;\n  isVideoMuted = true;\n\n  constructor(private route: Router) {\n    this.user = new User();\n    this.namePrincipalRoom = 'PrincipalRoom';\n  }\n\n  moveRoom(nameRoom: String, isAdmin: Boolean): void {\n    const myNode = document.getElementById('jitsi-iframe');\n    myNode.innerHTML = '';\n\n    console.log('nameRoom' + nameRoom);\n    console.log('prejoinPageEnabled:' + (this.user.name != '' ? true : false));\n\n    this.options = {\n      roomName: nameRoom,\n      width: 900,\n      height: 500,\n\n      configOverwrite: {\n        prejoinPageEnabled: this.user.name != '' ? false : true,\n      },\n      interfaceConfigOverwrite: {\n        startAudioMuted: true,\n        startVideoMuted: true,\n      },\n      parentNode: document.querySelector('#jitsi-iframe'),\n      userInfo: {\n        displayName: this.user.name,\n        email: 'john.doe@company.com',\n      },\n    };\n\n    this.api = new JitsiMeetExternalAPI(this.domain, this.options);\n    this.api.addEventListeners({\n      readyToClose: this.handleClose,\n      participantLeft: this.handleParticipantLeft,\n      participantJoined: this.handleParticipantJoined,\n      videoConferenceJoined: this.handleVideoConferenceJoined,\n      videoConferenceLeft: this.handleVideoConferenceLeft,\n      audioMuteStatusChanged: this.handleMuteStatus,\n      videoMuteStatusChanged: this.handleVideoStatus,\n      participantRoleChanged: this.participantRoleChanged,\n      passwordRequired: this.passwordRequired,\n      endpointTextMessageReceived: this.endpointTextMessageReceived,\n    });\n  }\n\n  changeRouterLink(value: any) {\n    console.log(value);\n    this.namePrincipalRoom = value;\n\n    const myNode = document.getElementById('jitsi-iframe');\n    myNode.innerHTML = '';\n\n    this.options = {\n      roomName: this.namePrincipalRoom,\n      width: 900,\n      height: 500,\n      configOverwrite: {\n        prejoinPageEnabled: false,\n        openBridgeChannel: 'datachannel',\n      },\n      interfaceConfigOverwrite: {\n        // overwrite interface properties\n      },\n      parentNode: document.querySelector('#jitsi-iframe'),\n      userInfo: {\n        displayName: this.user.name,\n      },\n    };\n\n    this.api = new JitsiMeetExternalAPI(this.domain, this.options);\n  }\n\n  handleClose = () => {\n    console.log('handleClose');\n  };\n\n  endpointTextMessageReceived = async (event: any) => {\n    console.log('mensaje recibido');\n    console.log(event);\n    console.log(event.data.eventData.text);\n    if ((event.data.eventData.text = 'mover a principal')) {\n      this.moveRoom('grupo 1', true);\n    }\n  };\n\n  passwordRequired = async () => {\n    console.log('passwordRequired'); // { id: \"2baa184e\" }\n    this.api.executeCommand('password', 'The Password');\n  };\n\n  handleParticipantLeft = async (participant: any) => {\n    console.log('handleParticipantLeft', participant); // { id: \"2baa184e\" }\n    const data = await this.getParticipants();\n  };\n\n  participantRoleChanged = async (participant: any) => {\n    console.log('participantRoleChanged', participant);\n    //if (participant.role === \"moderator\")\n    {\n      console.log('participantRoleChanged:', participant.role);\n      this.api.executeCommand('password', 'The Password');\n    }\n  };\n\n  handleParticipantJoined = async (participant: any) => {\n    console.log('OJOJOJOJ  handleParticipantJoined', participant); // { id: \"2baa184e\", displayName: \"Shanu Verma\", formattedDisplayName: \"Shanu Verma\" }\n\n    const data = await this.getParticipants();\n  };\n\n  handleVideoConferenceJoined = async (participant: any) => {\n    console.log('handleVideoConferenceJoined', participant); // { roomName: \"bwb-bfqi-vmh\", id: \"8c35a951\", displayName: \"Akash Verma\", formattedDisplayName: \"Akash Verma (me)\"}\n    /*\n    displayName: \"userNameTest\"\nformattedDisplayName: \"userNameTest (me)\"\nid: \"19563d97\"\nroomName: \"PrincipalRoom\"\n*/\n\n    this.user.setName(participant.userNameTest);\n    this.namePrincipalRoom = participant.roomName;\n\n    const data = await this.getParticipants();\n  };\n\n  handleVideoConferenceLeft = () => {\n    console.log('handleVideoConferenceLeft');\n    this.route.navigate(['/thank-you']);\n  };\n\n  handleMuteStatus = (audio: any) => {\n    console.log('handleMuteStatus', audio); // { muted: true }\n  };\n\n  handleVideoStatus = (video: any) => {\n    console.log('handleVideoStatus', video); // { muted: true }\n  };\n\n  getParticipants() {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve(this.api.getParticipantsInfo()); // get all participants\n      }, 500);\n    });\n  }\n\n  // custom events\n  executeCommand(command: string) {\n    this.api.executeCommand(command);\n    if (command == 'hangup') {\n      this.route.navigate(['/thank-you']);\n      return;\n    }\n\n    if (command == 'toggleAudio') {\n      this.isAudioMuted = !this.isAudioMuted;\n    }\n\n    if (command == 'toggleVideo') {\n      this.isVideoMuted = !this.isVideoMuted;\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}