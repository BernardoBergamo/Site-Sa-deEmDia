{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/andre/source/repos/Unisinos.SaudeEmDia/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { User } from '../models/user.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nclass JitsiComponent {\n  constructor(router) {\n    var _this = this;\n    this.router = router;\n    this.domain = 'meet.jit.si';\n    // For Custom Controls\n    this.isAudioMuted = true;\n    this.isVideoMuted = true;\n    this.handleClose = () => {\n      console.log('handleClose');\n    };\n    this.endpointTextMessageReceived = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (event) {\n        console.log('mensaje recibido');\n        console.log(event);\n        console.log(event.data.eventData.text);\n        if (event.data.eventData.text = 'mover a principal') {\n          _this.moveRoom('grupo 1', true);\n        }\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    this.passwordRequired = /*#__PURE__*/_asyncToGenerator(function* () {\n      console.log('passwordRequired'); // { id: \"2baa184e\" }\n      _this.api.executeCommand('password', 'The Password');\n    });\n    this.handleParticipantLeft = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(function* (participant) {\n        console.log('handleParticipantLeft', participant); // { id: \"2baa184e\" }\n        const data = yield _this.getParticipants();\n      });\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    this.participantRoleChanged = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator(function* (participant) {\n        console.log('participantRoleChanged', participant);\n        //if (participant.role === \"moderator\")\n        {\n          console.log('participantRoleChanged:', participant.role);\n          _this.api.executeCommand('password', 'The Password');\n        }\n      });\n      return function (_x3) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    this.handleParticipantJoined = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator(function* (participant) {\n        console.log('OJOJOJOJ  handleParticipantJoined', participant); // { id: \"2baa184e\", displayName: \"Shanu Verma\", formattedDisplayName: \"Shanu Verma\" }\n        const data = yield _this.getParticipants();\n      });\n      return function (_x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n    this.handleVideoConferenceJoined = /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator(function* (participant) {\n        console.log('handleVideoConferenceJoined', participant); // { roomName: \"bwb-bfqi-vmh\", id: \"8c35a951\", displayName: \"Akash Verma\", formattedDisplayName: \"Akash Verma (me)\"}\n        /*\n        displayName: \"userNameTest\"\n        formattedDisplayName: \"userNameTest (me)\"\n        id: \"19563d97\"\n        roomName: \"PrincipalRoom\"\n        */\n        _this.user.setName(participant.userNameTest);\n        _this.roomName = participant.roomName;\n        const data = yield _this.getParticipants();\n      });\n      return function (_x5) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n    this.handleVideoConferenceLeft = () => {\n      console.log('handleVideoConferenceLeft');\n      this.router.navigate(['/thank-you']);\n    };\n    this.handleMuteStatus = audio => {\n      console.log('handleMuteStatus', audio); // { muted: true }\n    };\n\n    this.handleVideoStatus = video => {\n      console.log('handleVideoStatus', video); // { muted: true }\n    };\n\n    this.user = new User();\n    this.roomName = 'AndrewPaes';\n  }\n  ngOnInit() {\n    return _asyncToGenerator(function* () {})();\n  }\n  moveRoom(nameRoom, isAdmin) {\n    let myNode = document.getElementById('jitsi-iframe');\n    myNode.innerHTML = '';\n    console.log('nameRoom' + nameRoom);\n    console.log('prejoinPageEnabled:' + (this.user.name != '' ? true : false));\n    this.options = {\n      roomName: nameRoom,\n      width: 900,\n      height: 500,\n      configOverwrite: {\n        prejoinPageEnabled: this.user.name != '' ? false : true\n      },\n      interfaceConfigOverwrite: {\n        startAudioMuted: true,\n        startVideoMuted: true\n      },\n      parentNode: document.querySelector('#jitsi-iframe'),\n      userInfo: {\n        displayName: this.user.name,\n        email: 'john.doe@company.com'\n      }\n    };\n    this.api = new JitsiMeetExternalAPI(this.domain, this.options);\n    this.api.addEventListeners({\n      readyToClose: this.handleClose,\n      participantLeft: this.handleParticipantLeft,\n      participantJoined: this.handleParticipantJoined,\n      videoConferenceJoined: this.handleVideoConferenceJoined,\n      videoConferenceLeft: this.handleVideoConferenceLeft,\n      audioMuteStatusChanged: this.handleMuteStatus,\n      videoMuteStatusChanged: this.handleVideoStatus,\n      participantRoleChanged: this.participantRoleChanged,\n      passwordRequired: this.passwordRequired,\n      endpointTextMessageReceived: this.endpointTextMessageReceived\n    });\n  }\n  changeRouterLink(value) {\n    console.log(value);\n    this.roomName = value;\n    let myNode = document.getElementById('jitsi-iframe');\n    myNode.innerHTML = '';\n    this.options = {\n      roomName: this.roomName,\n      width: 900,\n      height: 500,\n      configOverwrite: {\n        prejoinPageEnabled: false,\n        openBridgeChannel: 'datachannel'\n      },\n      interfaceConfigOverwrite: {\n        // overwrite interface properties\n      },\n      parentNode: document.querySelector('#jitsi-iframe'),\n      userInfo: {\n        displayName: this.user.name\n      }\n    };\n    this.api = new JitsiMeetExternalAPI(this.domain, this.options);\n  }\n  getParticipants() {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve(this.api.getParticipantsInfo()); // get all participants\n      }, 500);\n    });\n  }\n  // custom events\n  executeCommand(command) {\n    this.api.executeCommand(command);\n    if (command == 'hangup') {\n      this.router.navigate(['/thank-you']);\n      return;\n    }\n    if (command == 'toggleAudio') {\n      this.isAudioMuted = !this.isAudioMuted;\n    }\n    if (command == 'toggleVideo') {\n      this.isVideoMuted = !this.isVideoMuted;\n    }\n  }\n}\nJitsiComponent.ɵfac = function JitsiComponent_Factory(t) {\n  return new (t || JitsiComponent)(i0.ɵɵdirectiveInject(i1.Router));\n};\nJitsiComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: JitsiComponent,\n  selectors: [[\"app-jitsi\"]],\n  decls: 9,\n  vars: 1,\n  consts: [[\"id\", \"jitsi-iframe\"], [1, \"item-center\"], [\"aria-hidden\", \"true\", \"title\", \"Mute / Unmute\", 1, \"fas\", \"fa-2x\", \"grey-color\", 3, \"ngClass\", \"click\"]],\n  template: function JitsiComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"span\");\n      i0.ɵɵtext(3, \"Custom Controls\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 1)(5, \"span\");\n      i0.ɵɵtext(6, \"\\u00A0\\u00A0\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"i\", 2);\n      i0.ɵɵlistener(\"click\", function JitsiComponent_Template_i_click_7_listener() {\n        return ctx.executeCommand(\"toggleAudio\");\n      });\n      i0.ɵɵtext(8, \"mover a otra sala\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngClass\", ctx.isAudioMuted ? \"fa-microphone-slash\" : \"fa-microphone\");\n    }\n  },\n  dependencies: [i2.NgClass],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { JitsiComponent };","map":{"version":3,"names":["User","JitsiComponent","constructor","router","_this","domain","isAudioMuted","isVideoMuted","handleClose","console","log","endpointTextMessageReceived","_ref","_asyncToGenerator","event","data","eventData","text","moveRoom","_x","apply","arguments","passwordRequired","api","executeCommand","handleParticipantLeft","_ref3","participant","getParticipants","_x2","participantRoleChanged","_ref4","role","_x3","handleParticipantJoined","_ref5","_x4","handleVideoConferenceJoined","_ref6","user","setName","userNameTest","roomName","_x5","handleVideoConferenceLeft","navigate","handleMuteStatus","audio","handleVideoStatus","video","ngOnInit","nameRoom","isAdmin","myNode","document","getElementById","innerHTML","name","options","width","height","configOverwrite","prejoinPageEnabled","interfaceConfigOverwrite","startAudioMuted","startVideoMuted","parentNode","querySelector","userInfo","displayName","email","JitsiMeetExternalAPI","addEventListeners","readyToClose","participantLeft","participantJoined","videoConferenceJoined","videoConferenceLeft","audioMuteStatusChanged","videoMuteStatusChanged","changeRouterLink","value","openBridgeChannel","Promise","resolve","reject","setTimeout","getParticipantsInfo","command","i0","ɵɵdirectiveInject","i1","Router","selectors","decls","vars","consts","template","JitsiComponent_Template","rf","ctx","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","JitsiComponent_Template_i_click_7_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\andre\\source\\repos\\Unisinos.SaudeEmDia\\src\\app\\jitsi\\jitsi.component.ts","C:\\Users\\andre\\source\\repos\\Unisinos.SaudeEmDia\\src\\app\\jitsi\\jitsi.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from '../models/user.model';\ndeclare var JitsiMeetExternalAPI: any;\n\n@Component({\n  selector: 'app-jitsi',\n  templateUrl: './jitsi.component.html',\n  styleUrls: ['./jitsi.component.scss']\n})\nexport class JitsiComponent implements OnInit {\n  api: any;\n  user: User;\n  roomName: String;\n  options: any;\n  domain: string = 'meet.jit.si';\n\n  // For Custom Controls\n  isAudioMuted = true;\n  isVideoMuted = true;\n  constructor(\n    private router: Router\n  ) {\n    this.user = new User();\n    this.roomName = 'AndrewPaes';\n  }\n\n  async ngOnInit() {\n\n  }\n\n  moveRoom(nameRoom: String, isAdmin: Boolean): void {\n    let myNode: HTMLElement = <HTMLElement>document.getElementById('jitsi-iframe');\n    myNode.innerHTML = '';\n\n    console.log('nameRoom' + nameRoom);\n    console.log('prejoinPageEnabled:' + (this.user.name != '' ? true : false));\n\n    this.options = {\n      roomName: nameRoom,\n      width: 900,\n      height: 500,\n\n      configOverwrite: {\n        prejoinPageEnabled: this.user.name != '' ? false : true,\n      },\n      interfaceConfigOverwrite: {\n        startAudioMuted: true,\n        startVideoMuted: true,\n      },\n      parentNode: document.querySelector('#jitsi-iframe'),\n      userInfo: {\n        displayName: this.user.name,\n        email: 'john.doe@company.com',\n      },\n    };\n\n    this.api = new JitsiMeetExternalAPI(this.domain, this.options);\n\n    this.api.addEventListeners({\n      readyToClose: this.handleClose,\n      participantLeft: this.handleParticipantLeft,\n      participantJoined: this.handleParticipantJoined,\n      videoConferenceJoined: this.handleVideoConferenceJoined,\n      videoConferenceLeft: this.handleVideoConferenceLeft,\n      audioMuteStatusChanged: this.handleMuteStatus,\n      videoMuteStatusChanged: this.handleVideoStatus,\n      participantRoleChanged: this.participantRoleChanged,\n      passwordRequired: this.passwordRequired,\n      endpointTextMessageReceived: this.endpointTextMessageReceived,\n    });\n  }\n\n  changeRouterLink(value: any) {\n    console.log(value);\n    this.roomName = value;\n\n    let myNode: HTMLElement = <HTMLElement>document.getElementById('jitsi-iframe');\n    myNode.innerHTML = '';\n\n    this.options = {\n      roomName: this.roomName,\n      width: 900,\n      height: 500,\n      configOverwrite: {\n        prejoinPageEnabled: false,\n        openBridgeChannel: 'datachannel',\n      },\n      interfaceConfigOverwrite: {\n        // overwrite interface properties\n      },\n      parentNode: document.querySelector('#jitsi-iframe'),\n      userInfo: {\n        displayName: this.user.name,\n      },\n    };\n\n    this.api = new JitsiMeetExternalAPI(this.domain, this.options);\n  }\n\n  handleClose = () => {\n    console.log('handleClose');\n  };\n\n  endpointTextMessageReceived = async (event: any) => {\n    console.log('mensaje recibido');\n    console.log(event);\n    console.log(event.data.eventData.text);\n    if ((event.data.eventData.text = 'mover a principal')) {\n      this.moveRoom('grupo 1', true);\n    }\n  };\n\n  passwordRequired = async () => {\n    console.log('passwordRequired'); // { id: \"2baa184e\" }\n    this.api.executeCommand('password', 'The Password');\n  };\n\n  handleParticipantLeft = async (participant: any) => {\n    console.log('handleParticipantLeft', participant); // { id: \"2baa184e\" }\n    const data = await this.getParticipants();\n  };\n\n  participantRoleChanged = async (participant: any) => {\n    console.log('participantRoleChanged', participant);\n    //if (participant.role === \"moderator\")\n    {\n      console.log('participantRoleChanged:', participant.role);\n      this.api.executeCommand('password', 'The Password');\n    }\n  };\n\n  handleParticipantJoined = async (participant: any) => {\n    console.log('OJOJOJOJ  handleParticipantJoined', participant); // { id: \"2baa184e\", displayName: \"Shanu Verma\", formattedDisplayName: \"Shanu Verma\" }\n\n    const data = await this.getParticipants();\n  };\n\n  handleVideoConferenceJoined = async (participant: any) => {\n    console.log('handleVideoConferenceJoined', participant); // { roomName: \"bwb-bfqi-vmh\", id: \"8c35a951\", displayName: \"Akash Verma\", formattedDisplayName: \"Akash Verma (me)\"}\n    /*\n    displayName: \"userNameTest\"\nformattedDisplayName: \"userNameTest (me)\"\nid: \"19563d97\"\nroomName: \"PrincipalRoom\"\n*/\n\n    this.user.setName(participant.userNameTest);\n    this.roomName = participant.roomName;\n\n    const data = await this.getParticipants();\n  };\n\n  handleVideoConferenceLeft = () => {\n    console.log('handleVideoConferenceLeft');\n    this.router.navigate(['/thank-you']);\n  };\n\n  handleMuteStatus = (audio: any) => {\n    console.log('handleMuteStatus', audio); // { muted: true }\n  };\n\n  handleVideoStatus = (video: any) => {\n    console.log('handleVideoStatus', video); // { muted: true }\n  };\n\n  getParticipants() {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve(this.api.getParticipantsInfo()); // get all participants\n      }, 500);\n    });\n  }\n\n  // custom events\n  executeCommand(command: string) {\n    this.api.executeCommand(command);\n    if (command == 'hangup') {\n      this.router.navigate(['/thank-you']);\n      return;\n    }\n\n    if (command == 'toggleAudio') {\n      this.isAudioMuted = !this.isAudioMuted;\n    }\n\n    if (command == 'toggleVideo') {\n      this.isVideoMuted = !this.isVideoMuted;\n    }\n  }\n}\n","<script src='https://meet.jit.si/external_api.js'></script>\n<div id=\"jitsi-iframe\"></div>\n<div class=\"item-center\">\n  <span>Custom Controls</span>\n</div>\n<div class=\"item-center\">\n  <span>&nbsp;&nbsp;</span>\n  <i (click)=\"executeCommand('toggleAudio')\" class=\"fas fa-2x grey-color\"\n    [ngClass]=\"isAudioMuted ? 'fa-microphone-slash' : 'fa-microphone'\" aria-hidden=\"true\" title=\"Mute / Unmute\">mover a\n    otra sala</i>\n  <!--\n  <i\n    (click)=\"executeCommand('toggleAudio')\"\n    class=\"fas fa-2x grey-color\"\n    [ngClass]=\"isAudioMuted ? 'fa-microphone-slash' : 'fa-microphone'\"\n    aria-hidden=\"true\"\n    title=\"Mute / Unmute\"\n    >toggleAudio</i\n  >\n  <i\n    (click)=\"executeCommand('hangup')\"\n    class=\"fas fa-phone-slash fa-2x red-color\"\n    aria-hidden=\"true\"\n    title=\"Leave\"\n    >hangup</i\n  >\n  <i\n    (click)=\"executeCommand('toggleVideo')\"\n    class=\"fas fa-2x grey-color\"\n    [ngClass]=\"isVideoMuted ? 'fa-video-slash' : 'fa-video'\"\n    aria-hidden=\"true\"\n    title=\"Start / Stop camera\"\n    >toggleVideo</i\n  >\n  <i\n    (click)=\"executeCommand('toggleShareScreen')\"\n    class=\"fas fa-film fa-2x grey-color\"\n    aria-hidden=\"true\"\n    title=\"Share your screen\"\n    >toggleShareScreen</i\n  >\n\n-->\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}